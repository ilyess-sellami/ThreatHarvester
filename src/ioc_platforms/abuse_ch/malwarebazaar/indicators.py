import requests
from src.ioc_platforms.abuse_ch.config import MALWAREBAZAAR_BASE_URL, API_KEY
from .normalize import normalize_malwarebazaar_item


def fetch_recent():
    """
    Fetch recent MalwareBazaar IOCs (latest 100) and save them to a JSON file.
    """

    payload = "query=get_recent&selector=100"
    headers = {
        "Auth-Key": API_KEY,
        "Content-Type": "application/x-www-form-urlencoded",
        "User-Agent": "ThreatHarvester/1.0",
    }

    try:
        print("[*] Fetching recent MalwareBazaar samples...")
        response = requests.post(
            MALWAREBAZAAR_BASE_URL, headers=headers, data=payload, timeout=30
        )
        response.raise_for_status()
        data = response.json()

        if data.get("query_status") != "ok":
            print(f"[!] Query failed: {data.get('query_status')}")
            return

        iocs = [normalize_malwarebazaar_item(item) for item in data.get("data", [])]
        print(f"[*] Retrieved {len(iocs)} IOCs.")

        return iocs

    except requests.exceptions.HTTPError as e:
        print(f"[!] HTTP Error: {e}")
    except Exception as e:
        print(f"[!] Error: {e}")
